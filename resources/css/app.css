/* =Jay. Tailwind already uses "Cascade Layers" internally. Here we are just adding an extra layer (to their internal layers) to manage states--particulary with complex fields like Bard--where specificity is much easier to handle with layers. */
@layer base, components, utilities, ui, ui-states;

/* =Jay. Map layers to Tailwind's internal layers so that we can inject custom layers as needed */
@layer base {
  @tailwind base;
}

@layer components {
  @tailwind components;
}

@layer utilities {
  @tailwind utilities;
}

@import 'tailwindcss';
@import './ui.css';
@import './cp.css';
@import './core/utilities.css';
@import './dark.css';
@import './tailwind-animate.css';

@custom-variant dark (&:where(.dark, .dark *));

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/

@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}
