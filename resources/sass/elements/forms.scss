/* ==========================================================================
   BASE FORM ELEMENTS
   ========================================================================== */

// TODO: Figure out where this is used. What even is it?
form {
    ul, li {
        list-style: none;
        padding: 3px 0;
    }
}

label {
    @apply .text-grey-80 .font-normal .text-sm .block .leading-normal;
}

input[type="checkbox"] {
    font-size: 18px;
    position: relative;
    top: -1px;
}

input[type="radio"] {
    font-size: 18px;
    position: relative;
    top: 1px;
}

select {
    @apply .text-base .bg-grey-30 .border-2 .border-grey-30 .cursor-pointer;
}


/* Text Fields
  ========================================================================== */

.input-text {
    @apply appearance-none bg-grey-10 text-grey-80 max-w-full w-full border p-1 rounded shadow-inner;
    transition: border-color .15s ease-in-out,
                box-shadow .15s ease-in-out;

    &:not(textarea) {
        height: 38px;
    }

    &:focus, &:focus-within {
        @apply focus-outline;
    }

}

// Used inside tables, grids, and so on
.input-text-minimal {
    @apply appearance-none shadow-none bg-white w-full p-1;

    &:focus {
        @apply outline-none bg-grey-20;
    }
}


// Needs an 'input' selector, otherwise when .input-text is used on a div, it's always considered read only.
input.input-text:read-only,
textarea.input-text:read-only,
input.input-text-minimal:read-only,
.input-text.read-only {
    @apply bg-grey-30 text-grey-70;
}

/* Input Groups
  ========================================================================== */

.input-group {
    @apply appearance-none text-grey-80 w-full p-0 rounded flex items-center;
    height: 38px;

    &:not(.focus-within-only):focus, &:not(.focus-within-only):focus-within {
        @apply focus-outline;

        .input-text:focus, .input-group-prepend:focus, .input-group-append:focus, .input-group-item:focus {
            @apply focus-none;
        }
    }

    .input-text {
        @apply .flex-1 border-grey-50 min-w-0;
    }

    .input-text:not(:first-child) {
        @apply rounded-l-none border-l-0;
    }

    .input-text:not(:last-child) {
        @apply rounded-r-none border-r-0;
    }

    .input-group-prepend, .input-group-append, .input-group-item {
        @apply rounded-l px-1 border text-sm text-grey-80 select-none;
        background: linear-gradient(180deg, #fff, #f9fafb);
        border: 1px solid #c4cdd6;
        box-shadow: 0 1px 0 0 rgba(25,30,35,.05);
        height: 38px;
        line-height: 36px;

        &button {
            @apply cursor-pointer;
        }
    }

    &.focus-within-only {
        .input-text:focus, .input-group-prepend:focus, .input-group-append:focus, .input-group-item:focus {
            @apply focus-outline;
            z-index: 1;
        }
    }

    .input-group-item {
        @apply rounded-l-none -mx-px;
    }

    button.input-group-item:hover:not(:disabled),
    button.input-group-item:active:not(:disabled),
    button.input-group-prepend:hover:not(:disabled),
    button.input-group-prepend:active:not(:disabled),
    button.input-group-append:hover:not(:disabled),
    button.input-group-append:active:not(:disabled) {
        background: linear-gradient(180deg, #f9fafb, #f4f6f8);
        border-color: #c4cdd5;
    }

    .input-group-append {
        @apply rounded-l-none border-r-0; // Rounded on the right side
        &:last-child { @apply rounded-r border-r; }
    }

    > *:last-child[class*="input-group-"],
    > *:last-child [class*="input-group-"] {
        @apply rounded-r;
    }

}

.input-group.input-group-sm {
    height: 1.625rem;
    .input-group-prepend, .input-group-append, .input-group-item {
        @apply text-xs;
        height: 1.625rem;
        line-height: 25px;
        padding: 0 12px;
    }
}


/* Radio and Checkbox Fields
  ========================================================================== */

.radio-fieldtype .option,
.checkboxes-fieldtype .option {
    @apply mt-1.5 flex items-center;

    input {
        @apply leading-normal mr-sm relative;
        top: -1px;
    }

    label {
        @apply font-normal leading-none flex items-center;
    }
}

.radio-fieldtype .inline-mode,
.checkboxes-fieldtype .inline-mode {
    @apply flex items-center flex-wrap;

    .option {
        @apply mr-2 mb-1.5;
    }
}

.radio-box {
    @apply border rounded cursor-pointer relative p-2 h-full;
    &.selected {
        @apply border-blue text-blue shadow;
    }
}


/* Select Fields
  ========================================================================== */
  .select-input-container {
    @apply rounded relative;

    &:focus, &:focus-within {
        @apply focus-outline;
    }

    select {
        @apply text-sm text-grey-80 shadow-button cursor-pointer block w-full h-full text-left relative max-w-full;
        @apply select-none rounded leading-normal align-middle whitespace-no-wrap appearance-none subpixel-antialiased;

        background: linear-gradient(180deg, #fff, #f9fafb);
        border: 1px solid #c4cdd6;
        height: 2.375rem; // 38px
        letter-spacing: -0.01em;
        padding: .475rem 1.75rem .475rem .75rem;

        &:focus {
            @apply focus-outline;
        }

        &:hover:not(:disabled), &:active:not(:disabled) {
            background: linear-gradient(180deg, #f9fafb, #f4f6f8);
            border-color: #c4cdd5;
        }
    }

    .select-input-toggle {
        @apply pointer-events-none absolute inset-y-0 right-0 flex items-center px-1 text-grey-90;

        svg {
            @apply fill-current h-4 w-4;
        }
    }
  }


label .required {
    color: $color_red;
    font-style: normal;

    + .localizable-icon {
        margin-left: 5px;
    }
}

input[type="file"] {
    padding: 16px;
    height: auto;
    line-height: 1;
}

input.slug {
    background: none;
    box-shadow: none;
    border: none;
    float: left;
    flex-grow: 1;
    font-size: 19px !important;
    height: 32px !important;
    padding-top: 3px !important;
    transition: none !important;
    width: 75% !important;
    -webkit-font-smoothing: antialiased;
    &:hover,
    &:focus {
        @extend .input-text;
        transition: none !important;
    }
}

.filter-control {
    background: #fff;
    border: 1px solid rgba(0,0,0,.15);
    font-size: 14px;
    line-height: 1.5;
    position: relative;

    &.search { height: 34px !important; }
}

.help-block { width: 100%; }


/* Form groups
  ========================================================================== */
.form-group {
    @apply .p-1.5 .m-0;

    label {
        font-weight: 500;
    }

    .input-with-loader + .help-block {
        margin-top: 0;
    }

    &.form-grid,
    .form-grid {
        input,
        textarea {
            background: none;
            box-shadow: none;
        }
    }
}

.form-group.inline {
    display: flex;
    align-items: stretch;
    padding: 0 !important;
    margin: 0 !important;

    .form-group { flex-basis: auto; }

    .major { flex: 1; }
}

.help-block {
    @apply .block .mb-1 .text-grey-70 .text-xs;
    a {
        @apply .text-red;
        &:hover {
            @apply .text-grey-80;
        }
    }
}

@screen md {
    .form-group {
        @apply .p-3;
    }
}
